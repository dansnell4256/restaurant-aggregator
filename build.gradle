plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.2' apply false
    id 'pmd'
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    gradle.startParameter.taskNames.each { taskName ->
        if (taskName.contains('checkstyle') || taskName.contains('spotbugs') || taskName.contains('pmd')) {
            def stagedFiles = project.findProperty('stagedFiles')
            if (stagedFiles) {
                tasks.withType(Checkstyle) {
                    source = project.files(stagedFiles.split(' ').findAll { it.endsWith('.java') })
                }
                tasks.withType(Pmd) {
                    source = project.files(stagedFiles.split(' ').findAll { it.endsWith('.java') })
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    // Temporarily apply SpotBugs but disable the tasks
    apply plugin: 'com.github.spotbugs'

    // Disable all SpotBugs tasks for now
    tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
        enabled = false
    }

    pmd {
        toolVersion = '7.0.0'
        consoleOutput = true
        ignoreFailures = false
        ruleSetFiles = files("${rootProject.projectDir}/config/pmd/ruleset.xml")
        ruleSets = []
    }

    checkstyle {
        toolVersion = '10.12.3'
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
        maxWarnings = 0
        ignoreFailures = false
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
